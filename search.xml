<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>周总结-3</title>
      <link href="/2022/04/10/%E5%91%A8%E6%80%BB%E7%BB%93-3/"/>
      <url>/2022/04/10/%E5%91%A8%E6%80%BB%E7%BB%93-3/</url>
      
        <content type="html"><![CDATA[<h3 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h3><p>sheepice的CSDN博客地址：<a href="https://blog.csdn.net/qq_60556896/">CSDN地址</a></p><p>欢迎大家来到<strong>一周一总结</strong>的栏目！！希望能够和大家一起努力！</p><h3 id="二、力扣的刷题"><a href="#二、力扣的刷题" class="headerlink" title="二、力扣的刷题"></a>二、力扣的刷题</h3><p>这周感觉上，是在数据结构上面下了点功夫吧，对c++的一些容器的概念还有一些用法有了更加清楚的一个认识，然后现在使用迭代器的时候也能够敢去用一些以前不敢用的一些写法。比如<font color="red">auto</font>的使用，迭代器中<font color="red">begin（）</font>的一些使用了，感觉还是比较好的。今天周日好像已经是坚持力扣刷题的第53天了，不知不觉这两个多月的时间吧，力扣的题目已经刷了120多道了，虽然自己还是挺菜的吧，但是感觉比之前有所进步了！</p><h4 id="①数据结构的学习"><a href="#①数据结构的学习" class="headerlink" title="①数据结构的学习"></a>①数据结构的学习</h4><p>这周主要学了一些数据结构，比如怎么用两个栈实现一个队列，链表的数组存取，链式存取，对于一颗树的BFS搜索的进行等。然后跟着做了三叶姐的很多“-+”题，我还记得就是那时候刷奇偶数的遍历的时候，虽然可能难度比当天每日一题的大吧，但是那个时候真的就看着看着就会了，虽然树这个数据结构还是没有去细学吧，骚年继续加油啊！</p><h4 id="②算法的学习"><a href="#②算法的学习" class="headerlink" title="②算法的学习"></a>②算法的学习</h4><p>这周对于算法应该大题来说有新也有旧，新的是学了一下<strong>树状的数组</strong>，但是线段树还没有去学，树状数组可能对于现在的我来说可能还没有特别的习惯，争取下次遇到题目的时候再多复习总结一下。然后就是旧的背包知识，之前对于一维背包知识的一个遍历顺序其实还是会有对应的存疑的，但是看了<a href="https://mp.weixin.qq.com/mp/appmsgalbum?action=getalbum&__biz=MzU4NDE3MTEyMA==&scene=23&album_id=1751702161341628417&count=3#wechat_redirect">三叶姐这方面的总结</a>感觉对基础的背包有了比较深的印象了，当然看了一下状压dp，虽然看不懂呜呜，但是我相信以后会看得懂的哈哈哈！！</p><h3 id="三、课内任务"><a href="#三、课内任务" class="headerlink" title="三、课内任务"></a>三、课内任务</h3><h4 id="①c语言程序设计实验完成："><a href="#①c语言程序设计实验完成：" class="headerlink" title="①c语言程序设计实验完成："></a>①c语言程序设计实验完成：</h4><p>说真的这个实验花了蛮多的时间，其实还是因为自己太菜了，比如对于一些字符串连接，字符串寻找的函数使用非常的不熟悉，导致再重新学这一方面的时候花了蛮多额外的时间，就感觉基础没有大佬。在实验中遇到了很多的问题说真的，比如变量的重复定义，文件目录的创建等等，虽然最后通过各种询问解决了一些问题，但是我现在心里其实还是没有底的，毕竟很多东西查完之后，感觉我没有很彻底的了解到程序最底层的东西吧，希望后面能够在看c++prime的时候继续的巩固。</p><h4 id="②英语6级的复习："><a href="#②英语6级的复习：" class="headerlink" title="②英语6级的复习："></a>②英语6级的复习：</h4><p>其实按理来说我不应该说这个复习的事情的，因为我可能根本就没有复习。就好像6天有4天坚持了听了40min，还是因为自己听力太差了，所以拿听力的原文听了一遍又一遍，最终还是没能听出正确答案呜呜，然后有的时候就是本来说晚上做完事就听听力，然后一到十点多的时候，感觉一天好像学了不少东西，就玩玩手机，刷b站的视频，时间一晃而过，我的天，这周我感觉对时间的管理特别特别的差真的。</p><h3 id="四、一点决心"><a href="#四、一点决心" class="headerlink" title="四、一点决心"></a>四、一点决心</h3><p>其实之前在看星球的各位和我一样为了以后能够进一个好一点的大厂的人打卡和提问，这周印象最深的是北邮的一个同学吧，她现在大一，但是已经有了3个项目的参与，多个程序设计的奖项，然后每天会花5个小时在课内，5个小时在课外，而且已经刚刚通过了阿里的二面。说到这其实不是为了去把自己和这位大佬进行比较吧，但是当时看到的时候，真的感觉自己在时间管理方面，做得是真的挺差的。下周开始，我希望自己能够克服一些娱乐吧。就是先从小事做起，做到一天以内至少8个小时心思是完全在学习上的，而不是说，写完一题就看会微信聊会天，看会书就看点b站什么的吧！我希望下周日的总结日记，写到我的改变！毕竟时间还多，只要想去改变，那么什么时候都不算晚！！！</p><h3 id="五、新球打卡"><a href="#五、新球打卡" class="headerlink" title="五、新球打卡"></a>五、新球打卡</h3><h4 id="①周一"><a href="#①周一" class="headerlink" title="①周一"></a>①周一</h4><p>leetcode每日一题<br>大概懂了树状数组，并且自己实现了一遍</p><p>c++prime越看越看不懂了，特别看到类那一块，星球的uu们能给点建议吗？感觉看那个都有点劝退了。</p><p>操作系统看了线程</p><h4 id="②周二"><a href="#②周二" class="headerlink" title="②周二"></a>②周二</h4><p>英语六级听力40min，好像现在听力有点感觉了</p><p>力扣每日一题照常，开始刷数据结构的leetbook了，刷了3题今天</p><p>写了一篇树状数组的博客，下面有csdn关于这篇博客的网址，uu们可以看看，虽然我写得比较水</p><p>计算机操作系统看了三个调度算法（FCFS,SJF,HRRN），感觉还是比较有趣的</p><p>c++prime水完了第七章，类那一块真的有点不太懂，但是大概懂了点构造函数那一块，包括链表内部那个构造函数，知道怎么记忆了。</p><p><a href="https://blog.csdn.net/qq_60556896/article/details/123967025?spm=1001.2014.3001.5501">树状数组初学_sheep.ice的博客-CSDN博客</a> </p><h4 id="③周三"><a href="#③周三" class="headerlink" title="③周三"></a>③周三</h4><p>课内为主，上了一天课，补了补作业<br>力扣那题图论想不出好办法 明天进攻图论我说的<br>居然就没了哈哈哈哈</p><h4 id="④周四"><a href="#④周四" class="headerlink" title="④周四"></a>④周四</h4><p>被学校的数据文件实验继续折磨<br>开始看《算法竞赛入门》，对各种迭代器的使用又加深了一点<br>力扣照常每日一题<br>英语30min</p><h4 id="⑤周五"><a href="#⑤周五" class="headerlink" title="⑤周五"></a>⑤周五</h4><p>c++prime第八章<br>英语40min<br>两道bfs树的遍历<br>看了下竞赛入门经典一些数据结构</p><h4 id="⑥周六"><a href="#⑥周六" class="headerlink" title="⑥周六"></a>⑥周六</h4><p>终于搞完学校c语言设计的一个实验 写完了实验报告<br>每日一题（简单题）<br>看了三叶姐背包问题看了7章 对背包理解更深了<br>写了3h课内的东西<br>英语今天没看呜呜</p>]]></content>
      
      
      <categories>
          
          <category> 周总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 周总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树状数组初探</title>
      <link href="/2022/04/05/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E5%88%9D%E6%8E%A2/"/>
      <url>/2022/04/05/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84%E5%88%9D%E6%8E%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="一、树状数组的初学"><a href="#一、树状数组的初学" class="headerlink" title="一、树状数组的初学"></a>一、树状数组的初学</h1><p>之前学习过前缀和和差分的一些知识就觉得挺神奇的，然后昨天刷到力扣的每日一题之后发现，好像&#x3D;&#x3D;树状数组&#x3D;&#x3D;在多区间的修改和查询方面很神奇，包括之后要学习的&#x3D;&#x3D;线段树&#x3D;&#x3D;（能解决所有树状数组的问题）可能会更加有收获吧。😁😁</p><hr><h1 id="二、一些小小的理解"><a href="#二、一些小小的理解" class="headerlink" title="二、一些小小的理解"></a>二、一些小小的理解</h1><h3 id="①lowbit的理解"><a href="#①lowbit的理解" class="headerlink" title="①lowbit的理解"></a>①lowbit的理解</h3><p>在线段数组里面有这么一个重要的函数，也是能够构造整个树状数组的<font color="red">核心</font>吧！代码只有一行，但是对于我这种萌新来说，刚开始还是很难理解的。代码如下：</p><pre class="line-numbers language-c++"><code class="language-c++">//寻找一个数最低位的1int lowbit(int x) &#123;        return x & -x;    &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>举个比较简单的例子，一个数为3，他的二进制表示为11，那么根据负数二进制的要求，-3的二进制，我们先求他的反码为00，最后+1得到补码为01，最后让11 &amp; 01 便取得 01，也就是最低位的第一个1，<strong>大家可以试一下，利用这个函数，最后得到的结果一定只会含有一个1在整个数里面</strong>;</p><hr><h1 id="三、树状数组的构建"><a href="#三、树状数组的构建" class="headerlink" title="三、树状数组的构建"></a>三、树状数组的构建</h1><p><img src="https://img-blog.csdnimg.cn/00946e0b43e9458e843fd7c0b90696d5.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAc2hlZXAuaWNl,size_20,color_FFFFFF,t_70,g_se,x_16" alt="树状数组"><br>大家可以看到，树状数组首先对应一个s数组（假设有8个元素），也就是一个求总和的数组，这个数组里面对应装下一些前缀和，而每一个s对应数都是连续的，这也就为我们后面提供区间和利用<strong>前缀和</strong>的思想提供了很好的办法！<br>&#x3D;&#x3D;当然这里有要注意的点：&#x3D;&#x3D; 就是我们的s数组必须从1作为下标开始，也就是8个元素我们要开s[9]的空间，因为lowbit(0)是不存在最低位1的会造成<strong>无限循环</strong>的风险。大家可能不太理解，这个数组里面为什么能够按照这样的数字进行相加，我们看下面的图：<br><img src="https://img-blog.csdnimg.cn/5c68b3ed52e0422f9a8dde06069d7c9d.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAc2hlZXAuaWNl,size_20,color_FFFFFF,t_70,g_se,x_16" alt="二进制表示"><br>从上面的图，我们可以知道，每个s对应的下标，都是从某个下标i，通过加上lowbit(i),并且在每次演变的时候，让$S_i$加上对应的num[i - 1] 的数(因为num数中的下标是从0开始的)，最后就变成了第一张图的样子，也就是接下来要讲的区间的更新。</p><hr><h1 id="四、区间的查询以及更新"><a href="#四、区间的查询以及更新" class="headerlink" title="四、区间的查询以及更新"></a>四、区间的查询以及更新</h1><h3 id="①区间的更新："><a href="#①区间的更新：" class="headerlink" title="①区间的更新："></a>①区间的更新：</h3><p>因为有了上面的铺垫，我们直接放上，s数组更新的一个代码，也就是如何让s数组存上对应相关的值。</p><pre class="line-numbers language-c++"><code class="language-c++">//添加和到对应的树状数组    void add(int x, int val) &#123;        for(int i = x; i <= n; i += lowbit(i)) &#123;            sum[i] +=  val;   //这里的val其实就是num[i - 1];        &#125;    &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>经过上面的操作之后，我们就<font color="green">完成了s数组的构建</font>，那么如果题目要求，改掉num数组里面的某个数的话，我们只需要让那个数所在的s也同时的更新就好，像下面一样:</p><pre class="line-numbers language-c++"><code class="language-c++">void update(int index, int val) &#123;        //这里的index要+1，因为num数组的下标从0开始        add(index + 1, val - nums[index]);        nums[index] = val;    &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="②区间的查询"><a href="#②区间的查询" class="headerlink" title="②区间的查询"></a>②区间的查询</h3><p>区间的查询，其实有点像更新的逆过程，比如我们要知道$\sum_{i&#x3D;0}^{6}num[i]$的总和也就是说如何要求出$ S_7 +  S_6  + S_4 $的值（这里大家可以对照一下上面的图）。<strong>7 - 6 - 4 不就是 111 - 110 - 100</strong>的过程吗？那其实就是每次让下标为i的数减去lowbit(i)，<font color="red">然后在此过程中去加上S[i]的值，最后就可以得到原始下标为index的前缀和了，根据区间前缀和计算的方式，最终就可以知道一段区间的和了。</font></p><pre class="line-numbers language-c++"><code class="language-c++">//计算从下标0- x-1的前缀和int query(int x) &#123;        int s = 0;        for(int i = x; i > 0; i -= lowbit(i)) &#123;            s += sum[i];        &#125;        return s;    &#125;//计算区间的和(不了解前缀和的同学可以先了解一下前缀和)int sumRange(int left, int right) &#123;        //因为原始的下标从0开始，那么对应区间和的下标要加1        return query(right + 1) - query(left);    &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h1 id="五、力扣的原题"><a href="#五、力扣的原题" class="headerlink" title="五、力扣的原题"></a>五、力扣的原题</h1><h3 id="①原题贴图"><a href="#①原题贴图" class="headerlink" title="①原题贴图"></a>①原题贴图</h3><p><img src="https://img-blog.csdnimg.cn/48adae96d9104c9c9c868b5332bb8eb0.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAc2hlZXAuaWNl,size_20,color_FFFFFF,t_70,g_se,x_16" alt="树状数组模板题"></p><h3 id="②AC的代码全贴"><a href="#②AC的代码全贴" class="headerlink" title="②AC的代码全贴"></a>②AC的代码全贴</h3><pre class="line-numbers language-c++"><code class="language-c++">class NumArray &#123;public:    vector<int> sum;    //记录最低位的1    int lowbit(int x) &#123;        return x & -x;    &#125;    //添加和到对应的树状数组    void add(int x, int val) &#123;        for(int i = x; i <= n; i += lowbit(i)) &#123;            sum[i] +=  val;        &#125;    &#125;    int query(int x) &#123;        int s = 0;        for(int i = x; i > 0; i -= lowbit(i)) &#123;            s += sum[i];        &#125;        return s;    &#125;    vector<int> nums;    int n;    NumArray(vector<int>& nums) &#123;        this->nums = nums;        n = nums.size();        sum.resize(n + 1, 0);        for(int i = 0; i < n; i++) &#123;            add(i + 1, nums[i]);        &#125;    &#125;        void update(int index, int val) &#123;        add(index + 1, val - nums[index]);        nums[index] = val;    &#125;        int sumRange(int left, int right) &#123;        return query(right + 1) - query(left);    &#125;&#125;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h1 id="六、-参考文档"><a href="#六、-参考文档" class="headerlink" title="六、 参考文档"></a>六、 参考文档</h1><p><a href="https://blog.csdn.net/bestsort/article/details/80796531">参考1 树状数组的详细教程</a></p><p><a href="https://leetcode-cn.com/problems/range-sum-query-mutable/solution/-by-hu-ge-8-t4rn/">参考2 力扣胡歌的题解</a></p><p><a href="https://leetcode-cn.com/problems/range-sum-query-mutable/solution/guan-yu-ge-lei-qu-jian-he-wen-ti-ru-he-x-41hv/">参考3 力扣三叶姐的题解</a></p>]]></content>
      
      
      <categories>
          
          <category> 力扣刷题篇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 刷题 </tag>
            
            <tag> 力扣 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>周总结(2)</title>
      <link href="/2022/04/03/%E5%91%A8%E6%80%BB%E7%BB%93-2/"/>
      <url>/2022/04/03/%E5%91%A8%E6%80%BB%E7%BB%93-2/</url>
      
        <content type="html"><![CDATA[<h3 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h3><p>sheepice的CSDN博客地址：<a href="https://blog.csdn.net/qq_60556896/">CSDN地址</a></p><p>欢迎大家来到<strong>一周一总结</strong>的栏目！！希望能够和大家一起努力！</p><hr><h3 id="二、leetbook的完结"><a href="#二、leetbook的完结" class="headerlink" title="二、leetbook的完结"></a>二、leetbook的完结</h3><p>算是看完了的第一本leetbook吧，还是很支持三叶姐的。看完这本书的最大感受就是对动态规划有了更加深刻的一个理解吧，准备下周开始看三叶姐的背包问题的总结了。希望能够变得越来越强吧！</p><p>极力推荐**<a href="https://leetcode-cn.com/leetbook/read/path-problems-in-dynamic-programming/rt49s5/">三叶姐的第一本leetbook</a>**！！</p><p><img src="https://img-blog.csdnimg.cn/a2ca59a49a0c4c39a46d978111403d41.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAc2hlZXAuaWNl,size_20,color_FFFFFF,t_70,g_se,x_16"></p><hr><h3 id="三、知识星球的打卡"><a href="#三、知识星球的打卡" class="headerlink" title="三、知识星球的打卡"></a>三、知识星球的打卡</h3><h5 id="①Day-5，周一"><a href="#①Day-5，周一" class="headerlink" title="①Day 5，周一"></a>①Day 5，周一</h5><p>平平无奇的一天，但又是重新启航的一天。早上的时候终于把博客初步搭建好了，然后啥事也没干。<br>中午的时候忘记调闹钟了，一觉睡到了3点多，然后起来开始刷力扣，这是第39天了，加油啊骚年。写完力扣的题目，做了三叶姐的拓展，写了篇博客<a href="https://sheepice.github.io/">https://sheepice.github.io/</a><br>大家可以看看<br>晚上就继续看c++prime，看了两个多小时，好像对c++的容器还有一些变量的设置有了一点眉目，希望这一周可以好好总结一下，发一篇新的博客<br>呆会手机锁机<br>我要开始复习六级啦！</p><h5 id="②Day6，周二"><a href="#②Day6，周二" class="headerlink" title="②Day6，周二"></a>②Day6，周二</h5><p>今天的力扣每日一题很可惜没能第一时间想出来，当知道是滑动窗口的一个模板题的时候，狠狠的觉得自己题目刷少了哈哈哈。当然还是写了一篇博客的：<a href="https://sheepice.github.io/%E2%80%8B%E2%80%8B">https://sheepice.github.io/​​</a></p><p>早上起来听了六级听力，我从来没有发现英语那么难学啊呜呜。</p><p>下午的时候把c++prime的第四章看完了。</p><p>哦对了，早上的时候，我看了操作系统看了差不多1个多小时的视频，刚开始还觉得这样的课程比较无聊，但是王道那个老师举的例子真的好好玩啊哈哈哈！</p><p>晚上的话就是自己的姨妈生日，翘了一节计算机思维课去帮她过生日，不过好像那一节课讲完了好多c++的东西[流泪]。不过我也是好好的展现了一波社交能力[呲牙]</p><p>回来的时候觉得今天好像一天都没干什么，就花了点时间看了一下数据结构和算法分析，对时间复杂度有了更深刻的理解。然后看到了那个最大子序列和用递归的写法，不得不说，递归这个东西神秘而又奇妙啊[呲牙]</p><p>待会再背背单词还有写写英语翻译，几天都没睡好了，争取今天能睡一个好好的觉[呲牙]</p><h5 id="③Day7-周三"><a href="#③Day7-周三" class="headerlink" title="③Day7 周三"></a>③Day7 周三</h5><p>今天发了一篇生活的博客，有兴趣的uu们可以去看看sheepice的博客​​</p><p>c++prime看了第六章还差一点</p><p>每日一题摆烂，有思路但是对数据结构不太熟悉啊，不太知道怎么用优先队列</p><p>英语听力40min 待会还会背单词</p><p>操作系统看完第一章</p><p>今天好摆啊<img src="file:///C:\Users\0604520\AppData\Roaming\Tencent\QQTempSys\CE_6{RQP]3{T@BAJGTH{IW4.png" alt="img"></p><h5 id="④Day8-周四"><a href="#④Day8-周四" class="headerlink" title="④Day8 周四"></a>④Day8 周四</h5><p>英语听力40min，总共25错7，继续努力<br>lc三月打卡目标完成<br>三叶姐的最短路径和2（困难），记录最小和第二小元素<br>c++prime第六章扫完<br>数据结构看了点列表，那本书有点难，打算开leetbook结合一下<br>操作系统看了进程：了解了一些进程组织，进程状态和进程转换的知识，包括对操作系统内核的原语有了初步印象<br>大物第五章习题刷完，大物慕课刷完</p><h5 id="⑤Day9-周五"><a href="#⑤Day9-周五" class="headerlink" title="⑤Day9 周五"></a>⑤Day9 周五</h5><p>每日一题，写了篇博客<a href="https://sheepice.github.io/%E2%80%8B%E2%80%8B">https://sheepice.github.io/​​</a></p><p>最短路径二hard题目，记忆化搜索</p><p>栈和队列的实现，链表的索引实现<br>今天想休息会，待会和朋友打游戏去了</p><h5 id="⑥Day10-周六"><a href="#⑥Day10-周六" class="headerlink" title="⑥Day10 周六"></a>⑥Day10 周六</h5><p>被电工技术折磨住了<br>刷了一个记忆化搜索题<br>三叶姐的路径leetbook明天可以刷完<br>英语单词<br>摆烂休息</p><hr><h3 id="四、运动任务"><a href="#四、运动任务" class="headerlink" title="四、运动任务"></a>四、运动任务</h3><p>中规中矩吧，每天跑跑步，跳跳绳什么的，每天坚持一点运动还是很不错滴！</p><hr><h3 id="五、一点小倾诉"><a href="#五、一点小倾诉" class="headerlink" title="五、一点小倾诉"></a>五、一点小倾诉</h3><p>就今天不是一周的最后一天了嘛，其实从前天开始，就感觉到自己明显的有点不在状态了。就感觉有好多我自己说不清楚的压力在我的身上，无论是学业的还是生活上的，也不知道是不是因为太久没有和身边的人进行沟通了，太久没有和朋友们进行相聚了，内心老是感觉憋着无数的话说不出来，突然就觉得好像有些累了。不知道大家有没有这样一种情况，就是会突然那一下没有了动力，然后就感觉莫名其妙的空虚感，有的uu们可以来一起聊聊天哈！就其实一直想做一个很乐观很乐观的人，但是可能自己性格的缘故，越想着去说，想把一些开心或者自己想说的话说出去，但是就会有点想展示自己，就是我无比感受到这样的展现挺空虚的，我估计还是心灵在作祟吧！可恶的疫情啊，你什么时候能够对我们善良一点，我真的很想回到自己的学校，见到熟悉的朋友。到那时，也许望着天边的一片片云，都觉得很有味道吧。</p>]]></content>
      
      
      <categories>
          
          <category> 周总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 周总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>力扣刷题3</title>
      <link href="/2022/04/01/%E5%8A%9B%E6%89%A3%E5%88%B7%E9%A2%983/"/>
      <url>/2022/04/01/%E5%8A%9B%E6%89%A3%E5%88%B7%E9%A2%983/</url>
      
        <content type="html"><![CDATA[<h3 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h3><p>sheepice开启新的篇章了，虽然现在比较忙，但是如果有空，且写到一些比较有启发的力扣题的时候希望能够发一点点题解，毕竟三叶姐坚持了那么久，也给我有了很好的榜样作用！</p><p><a href="https://blog.csdn.net/qq_60556896/">sheepice的CSDN地址</a>：大家感兴趣也可以去里面，说不定能学到一点东西哦！</p><h3 id="二、leetcode每日一题"><a href="#二、leetcode每日一题" class="headerlink" title="二、leetcode每日一题"></a>二、leetcode每日一题</h3><p>今天的每日一题难度不大，主要想记录一下关系哈希表的容器相关写法吧！</p><p><img src="https://img-blog.csdnimg.cn/3f3ea20f3f3246cb883ad941a49020dd.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAc2hlZXAuaWNl,size_20,color_FFFFFF,t_70,g_se,x_16"></p><hr><h5 id="①思路："><a href="#①思路：" class="headerlink" title="①思路："></a>①思路：</h5><p>采用哈希表记录下来所有出现过的数和对应的次数，然后利用<strong>绝对值大小进行排序</strong>（这个排序可以方便我们对表进行一次遍历，只需要看arr[i]对应的arr[i] * 2的次数是不是比前者大，即满足前者能够充分的匹配后者，然后一旦不满足就return false就好了的。</p><hr><h5 id="②解答："><a href="#②解答：" class="headerlink" title="②解答："></a>②解答：</h5><pre class="line-numbers language-c++"><code class="language-c++">class Solution &#123;public:    bool canReorderDoubled(vector<int>& arr) &#123;         unordered_map<int, int> cnt;        for (int x : arr) &#123;            ++cnt[x];        &#125;        if (cnt[0] % 2) &#123;            return false;        &#125;        vector<int> vals;        vals.reserve(cnt.size());        for (auto &[x, y] : cnt) &#123;            vals.push_back(x);        &#125;        sort(vals.begin(), vals.end(), [](int a, int b) &#123; return abs(a) < abs(b); &#125;);        for (int x : vals) &#123;            if (cnt[2 * x] < cnt[x]) &#123; // 无法找到足够的 2x 与 x 配对                return false;            &#125;            cnt[2 * x] -= cnt[x];        &#125;        return true;    &#125;&#125;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h5 id="③学到的东西"><a href="#③学到的东西" class="headerlink" title="③学到的东西"></a>③学到的东西</h5><pre class="line-numbers language-c++"><code class="language-c++">//应该都是容器的相关知识，但是我还没看到，就先记录一下1.    //将哈希表里面的第一个元素放到数组里面，    for (auto &[x, y] : cnt) &#123;            vals.push_back(x);        &#125;2.    //直接在sort里面进行比较函数的书写    sort(vals.begin(), vals.end(), [](int a, int b) &#123; return abs(a) < abs(b); &#125;);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="三、三叶姐的题解"><a href="#三、三叶姐的题解" class="headerlink" title="三、三叶姐的题解"></a>三、三叶姐的题解</h3><p>因为自己还没有仔细学到拓扑排序还有优先队列，所以这个地方留着以后回来看：</p><p><a href="https://leetcode-cn.com/problems/array-of-doubled-pairs/solution/by-ac_oier-d1z7/">三叶姐的题解</a></p>]]></content>
      
      
      <categories>
          
          <category> 力扣刷题篇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 刷题 </tag>
            
            <tag> 力扣 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>生活分享1</title>
      <link href="/2022/03/30/%E7%94%9F%E6%B4%BB%E5%88%86%E4%BA%AB1/"/>
      <url>/2022/03/30/%E7%94%9F%E6%B4%BB%E5%88%86%E4%BA%AB1/</url>
      
        <content type="html"><![CDATA[<h3 id="一、写在前面"><a href="#一、写在前面" class="headerlink" title="一、写在前面"></a>一、写在前面</h3><p>一直认为生活不应该只有学业还有各种方面的压力，一定要有属于自己的诗和远方，开启生活篇的博客就是希望能够分享一下sheepice在生活里面遇到的很多很多事情吧！也相当于没有写技术博客的一个补充吧哈哈！</p><h3 id="二、《朋友请听好》"><a href="#二、《朋友请听好》" class="headerlink" title="二、《朋友请听好》"></a>二、《朋友请听好》</h3><p><img src="https://pics1.baidu.com/feed/d788d43f8794a4c2f670bf9a1b00dfdcac6e3929.jpeg?token=8b27736236d409e565c7c4c01d6aa0cd"></p><p>这是一档我很喜欢的综艺，说是一个综艺节目但是我更觉得它的意义在于一个情感上的慰藉港湾，在这里面有很多很多温暖的声音，有很多很多暖心的故事。当然在这里面我也收获了很多很多的慰藉！</p><h5 id="①“永远要相信世上的善意”"><a href="#①“永远要相信世上的善意”" class="headerlink" title="①“永远要相信世上的善意”"></a>①“永远要相信世上的善意”</h5><p>一位打电话来的女生，因为是自己一人在外打拼，所以自己就租了一个单间的房子，而有段时间她和邻居发生了争执。邻居住着一家，有着一个已经哑了的老奶奶，还有一个可爱的小孩。女生每次回家的时候，都会发现自己的家门口摆放着一双干净但又很破旧的皮鞋，因为是一个人，回家看到这样的情况，一定会有些恐惧的感觉。有一天，女生也没忍住，就去敲了邻居家的门，对着奶奶(情绪激动地)说到这样的事情，也许是因为太突然，女生觉得可能吓到老奶奶了，她看着老奶奶好像被吓得说不出话，因此也没有继续激动下去，而是提醒之后就走了。可是当天回来之后，那一双皮鞋依旧整整齐齐地摆放在自己家的门前，女生正无语的时候，看到鞋子里面有着一张小孩子写的纸条:”阿姨你好，我的奶奶她不能说话。我的爷爷走了，家里就剩下爷爷的这一双皮鞋，奶奶知道你是一个人住在这里，担心你的安全，所以把爷爷的皮鞋放在你的门口…….”</p><p><strong>我的描述可能不会太感动，但是当时听到最后的纸条内容的时候，我是真的一下也没有绷住，眼泪很自热而然地就流了下来。那时的我就突然觉得这个世界真的很好，真的很好，无论是最亲近的人还是陌生的人，他们也许无时无刻地在对你表示着善意，而请我们也要同样地对这个世界，对这个世界的每一个人保持善意！</strong></p><h3 id><a href="#" class="headerlink" title></a></h3><h5 id="②”你愿意和我建造一个图书馆吗？“"><a href="#②”你愿意和我建造一个图书馆吗？“" class="headerlink" title="②”你愿意和我建造一个图书馆吗？“"></a>②”你愿意和我建造一个图书馆吗？“</h5><p>因为故事很长，所以希望看到此篇博客的uu们可以到<a href="https://b23.tv/qzMpMH7">朋友请听好</a>这里去看！我深深被女生最后的英文誓词感动了，不知道是不是一时兴起，但是我觉得英文得好好学：</p><ul><li><p>英文誓词</p><ul><li><p>For the first, I love you deeply and passionately that I have felt for no one else in this life.</p></li><li><p>You said “早上好” this morning with your awkward Chinese. And I thought I can’t imagine myself love you more than I do today. But I thought the same way yesterday.</p></li><li><p>And if it astonished you, it almost frightened me as well.</p></li><li><p>It’s just. I was not such an fool even once hoped. Aspired, dreamed that one could find everything one want in a person.</p></li><li><p>And yet in you, I found everything.</p><p>…….</p></li></ul></li></ul><p><strong>读至此，我渴望着自己也能够变得更加的温柔，善良等等，因为一生的遇见，遇见的所有人，还有你，是多么多么的不容易啊。就像最后唱到的《慢慢喜欢你》,歌曲温柔，听着听着，就幻想到了后面的一生。</strong></p><h3 id="三、结束"><a href="#三、结束" class="headerlink" title="三、结束"></a>三、结束</h3><p>虽然当下的人包括自己真的在很多很多时候，想要快一点，再快一点。也许是快一点找到喜欢的一份工作，也许是快一点找到自己喜欢的人，可是殊不知，美好是一直在身边的。走得越快，真的能够抓住吗？</p>]]></content>
      
      
      <categories>
          
          <category> 生活篇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>力扣刷题2</title>
      <link href="/2022/03/29/%E5%8A%9B%E6%89%A3%E5%88%B7%E9%A2%982/"/>
      <url>/2022/03/29/%E5%8A%9B%E6%89%A3%E5%88%B7%E9%A2%982/</url>
      
        <content type="html"><![CDATA[<h3 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h3><p>sheepice开启新的篇章了，虽然现在比较忙，但是如果有空，且写到一些比较有启发的力扣题的时候希望能够发一点点题解，毕竟三叶姐坚持了那么久，也给我有了很好的榜样作用！</p><p><a href="https://blog.csdn.net/qq_60556896/">sheepice的CSDN地址</a>：大家感兴趣也可以去里面，说不定能学到一点东西哦！</p><hr><h3 id="二、leetcode每日一题"><a href="#二、leetcode每日一题" class="headerlink" title="二、leetcode每日一题"></a>二、leetcode每日一题</h3><p><img src="https://img-blog.csdnimg.cn/39df104b32574cbbac56a8e175e46cc2.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAc2hlZXAuaWNl,size_20,color_FFFFFF,t_70,g_se,x_16" alt="滑动窗口题目"></p><p>说实话，这一题在刚开始用双指针的时候，是有些地方没有想明白的，比如当最后的右指针移动到某个位置把k次数用完后，左指针应该移动到哪个位置，所以开始死磕了好久，最后也是积累了这样一种滑动窗口的办法吧。其实就是不要等右指针移到位才开始计算结果，边移动的时候就可以开始计算了，利用维护一个sum值，当sum依然小于k的时候，右指针就可以一直往后面移动，sum也一直++，知道他大于k的那一刻，我们的left就需要移动到他等于k的地方。那么这一题和后面要-+(三叶姐的简单题加餐)的题目是几乎一样的，只不过这题是需要计算最多有多少个“F”和“T”最后取两者的最大值就是答案啦！</p><pre class="line-numbers language-c++"><code class="language-c++">class Solution &#123;public:    string s;    int jl;    int maxConsecutiveAnswers(string answerKey, int k) &#123;        s = answerKey;        jl = k;        int ans = 0;        ans = max(getmax('T'), getmax('F'));        return ans;    &#125;    int getmax(char ss) &#123;        int n = s.size();        int sum = 0;        int as = 0;        for(int i = 0, j = 0; j < n; j++) &#123;            //不等于ss时，翻牌操作++；            sum += (s[j] != ss);            //翻牌的操作已经用空了            while(sum > jl) &#123;                sum -= (s[i] != ss);                i++;            &#125;            //边走边记录下来答案            as = max(as, j - i + 1);        &#125;        return as;    &#125;&#125;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="三、-套餐（简单题加餐）"><a href="#三、-套餐（简单题加餐）" class="headerlink" title="三、-+套餐（简单题加餐）"></a>三、-+套餐（简单题加餐）</h3><p><a href="https://mp.weixin.qq.com/s?__biz=MzU4NDE3MTEyMA==&mid=2247486241&idx=1&sn=609ca05e6e21a72023172b52d0af0a75&chksm=fd9ca03ecaeb2928018ef5b2faf20b170ae123813eec30962d2ea2d3c93e78e54ddde0d51c87&cur_album_id=1805384400772087811&scene=189#wechat_redirect">最大连续1的个数</a></p><p>上方来自三叶姐的题解，里面涉及到dp做法；二分加前缀和；还有今天的滑动窗口，非常的厉害！！</p>]]></content>
      
      
      <categories>
          
          <category> 力扣刷题篇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 刷题 </tag>
            
            <tag> 力扣 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>力扣刷题1</title>
      <link href="/2022/03/28/%E5%8A%9B%E6%89%A3%E5%88%B7%E9%A2%981/"/>
      <url>/2022/03/28/%E5%8A%9B%E6%89%A3%E5%88%B7%E9%A2%981/</url>
      
        <content type="html"><![CDATA[<h3 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h3><p>sheepice开启新的篇章了，虽然现在比较忙，但是如果有空，且写到一些比较有启发的力扣题的时候希望能够发一点点题解，毕竟三叶姐坚持了那么久，也给我有了很好的榜样作用！</p><p><a href="https://blog.csdn.net/qq_60556896/">sheepice的CSDN地址</a>：大家感兴趣也可以去里面，说不定能学到一点东西哦！</p><hr><h3 id="二、leecode每日一题"><a href="#二、leecode每日一题" class="headerlink" title="二、leecode每日一题"></a>二、leecode每日一题</h3><h5 id="①首先是今天的每日一题，题目如下："><a href="#①首先是今天的每日一题，题目如下：" class="headerlink" title="①首先是今天的每日一题，题目如下："></a>①首先是今天的每日一题，题目如下：</h5><p><img src="https://img-blog.csdnimg.cn/69c46960dcf04186a11aab308856d966.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAc2hlZXAuaWNl,size_20,color_FFFFFF,t_70,g_se,x_16" alt="交替二进制"></p><h5 id="②题目解答（1）"><a href="#②题目解答（1）" class="headerlink" title="②题目解答（1）"></a>②题目解答（1）</h5><pre class="line-numbers language-c++"><code class="language-c++">//版本1，逐步的进行判断class Solution &#123;public:    bool hasAlternatingBits(int n) &#123;        int prev = 100;  //因为二进制每一位不可能超过2，所以prev比2大就好        while (n != 0) &#123;            int cur = n & 1;    //当前判断的位数            if (cur == prev) &#123;  //如果与上一位相等就不满足                return false;            &#125;            prev = cur;         //前缀等于当前，进行下一次的判断            n >>= 1;        &#125;        return true;    &#125;&#125;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="③题目解答（2）"><a href="#③题目解答（2）" class="headerlink" title="③题目解答（2）"></a>③题目解答（2）</h5><p>因为位运算的性质，所以这题其实可以几行代码就解决的。例如一个二进制数为101，如何判断他是交替的呢。首先令u&#x3D;101，然后u &gt;&gt; 1是等于010的，这一步可以看成让一个本来是101交替的，变成010交替，那么u^(u&gt;&gt;1)等于111，也就是说对于交替进行的数字，必然有其本身抑或本身右移一位后得到的结果位数全部为1!!</p><pre class="line-numbers language-c++"><code class="language-c++">//版本二：利用位运算的相关性质class Solution &#123;public:    bool hasAlternatingBits(int n) &#123;        long a = n ^ (n >> 1);        //a加1后如果为真，111变成1000与原数按位与必然为0        return (a & (a+1)) == 0;    &#125;&#125;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="三、三叶姐的拓展"><a href="#三、三叶姐的拓展" class="headerlink" title="三、三叶姐的拓展"></a>三、三叶姐的拓展</h3><p>这一题之后三叶姐给了一个位运算的入门专题，也是状态压缩的一个入门题目：</p><p><a href="https://mp.weixin.qq.com/s?__biz=MzU4NDE3MTEyMA==&mid=2247490530&idx=1&sn=f53d29ff37a37b41408a83e10bff0ee6&chksm=fd9cb0fdcaeb39eb014629bce596c667600ad22791f5c4e50307da0090c8777caaefadf85948&mpshare=1&scene=23&srcid=0328BdmtGDal2kCsgWYe74cB&sharer_sharetime=1648433142477&sharer_shareid=700066f28b945e5d1cd5d3f0173f1539#rd">【位运算专题】经典「状态压缩 + 位运算」入门题</a></p><h5 id="①题目如下："><a href="#①题目如下：" class="headerlink" title="①题目如下："></a>①题目如下：</h5><p><img src="https://img-blog.csdnimg.cn/45a0dd6be54f4da8946facbd537559b3.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAc2hlZXAuaWNl,size_20,color_FFFFFF,t_70,g_se,x_16" alt="状态压缩入门"></p><h5 id="②解答如下"><a href="#②解答如下" class="headerlink" title="②解答如下"></a>②解答如下</h5><p>因为数据给的比较小，然后要判断的只是小写字母，因此只需要把每一个单词小写字母出现的情况放在一个二进制数下进行表示就好了的！</p><pre class="line-numbers language-c++"><code class="language-c++">//c++版本的解答class Solution &#123;public:    int maxProduct(vector<string>& words) &#123;        int n = words.size();        vector<int> dp(n,0);        for(int i = 0; i < n; i++) &#123;            for(int j = 0; j < words[i].size(); j++) &#123;                char u = words[i][j];                //进行每一位1的存储                dp[i] |= (1 << (u - 'a'));              &#125;        &#125;        int ans = 0;        //从头比较到尾，满足无重复数字就进行相关的答案记录        for(int i = 0; i < n - 1; i++) &#123;            for(int j = i+1; j < n; j++) &#123;                if((dp[i] & dp[j]) == 0) &#123;//这里取最大值的地方可以注意一下//可以用ans = max(ans, (int)(words[i].size() * words[j].size()));//因为.size()结构是返回无符号类型的int所以力扣上会报错！！！                    if(words[i].size() * words[j].size() > ans)                    ans = words[i].size() * words[j].size();                &#125;            &#125;        &#125;        return ans;    &#125;&#125;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 力扣刷题篇 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 刷题 </tag>
            
            <tag> 力扣 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>周总结（1）</title>
      <link href="/2022/03/27/%E5%91%A8%E6%80%BB%E7%BB%93%EF%BC%881%EF%BC%89/"/>
      <url>/2022/03/27/%E5%91%A8%E6%80%BB%E7%BB%93%EF%BC%881%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h3 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h3><p>sheepice的CSDN博客地址：<a href="https://blog.csdn.net/qq_60556896/">CSDN地址</a></p><p>欢迎大家来到&#x3D;&#x3D;一周一总结&#x3D;&#x3D;的栏目！！希望能够和大家一起努力！</p><h3 id="二、学习任务"><a href="#二、学习任务" class="headerlink" title="二、学习任务"></a>二、学习任务</h3><h5 id="①力扣的刷题任务"><a href="#①力扣的刷题任务" class="headerlink" title="①力扣的刷题任务"></a>①力扣的刷题任务</h5><p>这周的力扣好像都没有出太难的题目，唯一令我印象比较深刻的是一道困难题<a href="https://leetcode-cn.com/problems/k-th-smallest-in-lexicographical-order/">字典序的第k小的数字</a>，这个题目的模仿了字典树的一个遍历过程，当时真的没有想到，但是其实还是有点眉目的，虽然最后还是没写出来吧。遗憾的是，自己还是没有把字典树给学精通来！</p><p><img src="https://img-blog.csdnimg.cn/b15450e05169480fbb75e160274b782a.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6JKf6JK7c2hlZXA=,size_20,color_FFFFFF,t_70,g_se,x_16"></p><pre class="line-numbers language-c++"><code class="language-c++">//贴一下这个题目的一个求解过程吧class Solution &#123;public:    long min(long a, long b)&#123;        if(a >= b) return b;        return a;    &#125;    //找到此时的数字的所有树节点的个数    int findnums(long cur,int n)&#123;        long next = cur+1;        long sumtox = 0;        while(cur <= n)&#123;            sumtox += min(next-cur,n-cur+1);            next *= 10;            cur *= 10;        &#125;        return (int) sumtox;    &#125;    int findKthNumber(int n, int k) &#123;        long cur = 1;        k--;        while(k > 0)&#123;            int nodes = findnums(cur, n);            //如果结点数小于此时数量，直接在同一层搜索            if(k >= nodes)&#123;                k -= nodes;                cur++;            &#125;            //否则到树的下一层搜索            else&#123;                cur *= 10;                k--;            &#125;        &#125;        return (int)cur;    &#125;&#125;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>&#x3D;&#x3D;当时反正是想不出来的，希望以后看到总结的时候能够写出来这题吧！&#x3D;&#x3D;</p><p><strong>过完本周就是坚持力扣刷题38天了，当然这个连续刷题是有水分的，有的时候遇到完全没有思路的题目就直接跳过去了，蒟蒻太菜，求大佬们带带！</strong></p><hr><h5 id="②leetbook的学习"><a href="#②leetbook的学习" class="headerlink" title="②leetbook的学习"></a>②leetbook的学习</h5><p>本周还跟着三叶姐出的书，学了一点路径dp的知识，虽然在其中有很多以前写过的题目，但是再次刷题的时候还是会遇到各种各样的问题，当然收获最大的是，自己得到了某些方面的拓展，关于这一周的一个拓展，我也写在了我的CSDN博客里面，便于以后的查找：<a href="https://blog.csdn.net/qq_60556896/article/details/123754413?spm=1001.2014.3001.5502">最短路径拓展</a>！！</p><p>下面也是三叶姐的书，感兴趣的同学可以点这：<a href="https://leetcode-cn.com/leetbook/read/path-problems-in-dynamic-programming/r8h07j/">dp路径学习</a></p><p><img src="https://img-blog.csdnimg.cn/56991cd79f994e238c58468699a18170.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6JKf6JK7c2hlZXA=,size_20,color_FFFFFF,t_70,g_se,x_16"></p><hr><h5 id="③课内的学习"><a href="#③课内的学习" class="headerlink" title="③课内的学习"></a>③课内的学习</h5><p>课内其实这周就中规中矩吧，但是因为自己比较的笨，所以会花更多时间去把老师没有布置的题目写完，比如大物第二和第四章的课后习题都刷了一遍，等等。然后就是本来这周想要去开始六级的准备了，但是本人准备了个寂寞，每天都不太想背单词，听听力，我希望赶紧能够养成每天复习点英语的习惯，希望下一次的周记能够写到我英语有一直在复习哈哈哈！！</p><hr><h5 id="④博客的搭建"><a href="#④博客的搭建" class="headerlink" title="④博客的搭建"></a>④博客的搭建</h5><p>虽然自己对网页的方方面面都不知晓，但是为了让自己的博客目前看起来像点样子，还是抽出了周日的一天时间去美化自己的博客吧，就像大家看到的这个亚子，虽然还有些功能没有完善，但是我真的不太会怎么完善了，希望会的uu们可以交一下子我！</p><hr><h3 id="三、运动任务"><a href="#三、运动任务" class="headerlink" title="三、运动任务"></a>三、运动任务</h3><p>这周前几天比较冷还下雨，所以鸽了几天运动，但是后面有每天都去跑步和跳绳哦，我记得这周虽然没有减肥太多，但是体重保持得相当不错。还记得跳绳的时候，跳双摇，旁边的小弟弟召集了他的伙伴到身边围观，哈哈哈哈哈哈哈哈哈哈哈，当时的我真的会有点羞涩的！！</p><h3 id="四、创新任务"><a href="#四、创新任务" class="headerlink" title="四、创新任务"></a>四、创新任务</h3><h5 id="①加入了Carl哥的知识星球："><a href="#①加入了Carl哥的知识星球：" class="headerlink" title="①加入了Carl哥的知识星球："></a>①加入了Carl哥的知识星球：</h5><p>感兴趣的同学可以一起加入哦，曾听一位学姐说，与其花钱在各种不必须的物品之上，不如多知识付费去提高自己的能力！！加入星球后我发现了很多小伙伴有着跟自己相同的困惑，Carl哥非常好的，就是他会给每一个人进行解答，包括传授各种各样的知识和学习路线，值得大家入手！！</p><p><strong>下面是我得到的回答，收获很丰富</strong></p><p><img src="https://img-blog.csdnimg.cn/443ee98d271e4f50ade1640f701b0723.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6JKf6JK7c2hlZXA=,size_20,color_FFFFFF,t_70,g_se,x_16"></p><h5 id="②加了Carl哥还有三叶姐的微信"><a href="#②加了Carl哥还有三叶姐的微信" class="headerlink" title="②加了Carl哥还有三叶姐的微信"></a>②加了Carl哥还有三叶姐的微信</h5><p>&#x3D;&#x3D;虽然可能就是刚开始互相不认识的人，但是总是觉得已经认识了好久哈哈&#x3D;&#x3D;</p><hr><h3 id="五、总结-贴图"><a href="#五、总结-贴图" class="headerlink" title="五、总结+贴图"></a>五、总结+贴图</h3><p>一周下来真的很累很累，但是其实过得真的非常的充实，希望自己接下来可以不嫌麻烦的，继续坚持的做自己喜欢的事情，就像一直保持热爱的她！</p><p><img src="https://img-blog.csdnimg.cn/09100c5cafb848b4b0dc0220a6882b81.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6JKf6JK7c2hlZXA=,size_20,color_FFFFFF,t_70,g_se,x_16"></p>]]></content>
      
      
      <categories>
          
          <category> 周总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 周总结 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
