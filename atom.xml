<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>sheepice的博客</title>
  
  <subtitle>感谢各位家人的访问，希望能跟大家成为朋友</subtitle>
  <link href="https://sample.com/atom.xml" rel="self"/>
  
  <link href="https://sample.com/"/>
  <updated>2022-03-28T09:19:54.126Z</updated>
  <id>https://sample.com/</id>
  
  <author>
    <name>sheepice</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>力扣刷题1</title>
    <link href="https://sample.com/2022/03/28/%E5%8A%9B%E6%89%A3%E5%88%B7%E9%A2%981/"/>
    <id>https://sample.com/2022/03/28/%E5%8A%9B%E6%89%A3%E5%88%B7%E9%A2%981/</id>
    <published>2022-03-28T08:37:29.000Z</published>
    <updated>2022-03-28T09:19:54.126Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h3><p>sheepice开启新的篇章了，虽然现在比较忙，但是如果有空，且写到一些比较有启发的力扣题的时候希望能够发一点点题解，毕竟三叶姐坚持了那么久，也给我有了很好的榜样作用！</p><p><a href="https://blog.csdn.net/qq_60556896/">sheepice的CSDN地址</a>：大家感兴趣也可以去里面，说不定能学到一点东西哦！</p><hr><h3 id="二、leecode每日一题"><a href="#二、leecode每日一题" class="headerlink" title="二、leecode每日一题"></a>二、leecode每日一题</h3><h5 id="①首先是今天的每日一题，题目如下："><a href="#①首先是今天的每日一题，题目如下：" class="headerlink" title="①首先是今天的每日一题，题目如下："></a>①首先是今天的每日一题，题目如下：</h5><p><img src="https://img-blog.csdnimg.cn/69c46960dcf04186a11aab308856d966.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAc2hlZXAuaWNl,size_20,color_FFFFFF,t_70,g_se,x_16" alt="交替二进制"></p><h5 id="②题目解答（1）"><a href="#②题目解答（1）" class="headerlink" title="②题目解答（1）"></a>②题目解答（1）</h5><pre class="line-numbers language-c++"><code class="language-c++">//版本1，逐步的进行判断class Solution &#123;public:    bool hasAlternatingBits(int n) &#123;        int prev = 100;  //因为二进制每一位不可能超过2，所以prev比2大就好        while (n != 0) &#123;            int cur = n & 1;    //当前判断的位数            if (cur == prev) &#123;  //如果与上一位相等就不满足                return false;            &#125;            prev = cur;         //前缀等于当前，进行下一次的判断            n >>= 1;        &#125;        return true;    &#125;&#125;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="③题目解答（2）"><a href="#③题目解答（2）" class="headerlink" title="③题目解答（2）"></a>③题目解答（2）</h5><p>因为位运算的性质，所以这题其实可以几行代码就解决的。例如一个二进制数为101，如何判断他是交替的呢。首先令u&#x3D;101，然后u &gt;&gt; 1是等于010的，这一步可以看成让一个本来是101交替的，变成010交替，那么u^(u&gt;&gt;1)等于111，也就是说对于交替进行的数字，必然有其本身抑或本身右移一位后得到的结果位数全部为1!!</p><pre class="line-numbers language-c++"><code class="language-c++">//版本二：利用位运算的相关性质class Solution &#123;public:    bool hasAlternatingBits(int n) &#123;        long a = n ^ (n >> 1);        //a加1后如果为真，111变成1000与原数按位与必然为0        return (a & (a+1)) == 0;    &#125;&#125;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="三、三叶姐的拓展"><a href="#三、三叶姐的拓展" class="headerlink" title="三、三叶姐的拓展"></a>三、三叶姐的拓展</h3><p>这一题之后三叶姐给了一个位运算的入门专题，也是状态压缩的一个入门题目：</p><p><a href="https://mp.weixin.qq.com/s?__biz=MzU4NDE3MTEyMA==&mid=2247490530&idx=1&sn=f53d29ff37a37b41408a83e10bff0ee6&chksm=fd9cb0fdcaeb39eb014629bce596c667600ad22791f5c4e50307da0090c8777caaefadf85948&mpshare=1&scene=23&srcid=0328BdmtGDal2kCsgWYe74cB&sharer_sharetime=1648433142477&sharer_shareid=700066f28b945e5d1cd5d3f0173f1539#rd">【位运算专题】经典「状态压缩 + 位运算」入门题</a></p><h5 id="①题目如下："><a href="#①题目如下：" class="headerlink" title="①题目如下："></a>①题目如下：</h5><p><img src="https://img-blog.csdnimg.cn/45a0dd6be54f4da8946facbd537559b3.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAc2hlZXAuaWNl,size_20,color_FFFFFF,t_70,g_se,x_16" alt="状态压缩入门"></p><h5 id="②解答如下"><a href="#②解答如下" class="headerlink" title="②解答如下"></a>②解答如下</h5><p>因为数据给的比较小，然后要判断的只是小写字母，因此只需要把每一个单词小写字母出现的情况放在一个二进制数下进行表示就好了的！</p><pre class="line-numbers language-c++"><code class="language-c++">//c++版本的解答class Solution &#123;public:    int maxProduct(vector<string>& words) &#123;        int n = words.size();        vector<int> dp(n,0);        for(int i = 0; i < n; i++) &#123;            for(int j = 0; j < words[i].size(); j++) &#123;                char u = words[i][j];                //进行每一位1的存储                dp[i] |= (1 << (u - 'a'));              &#125;        &#125;        int ans = 0;        //从头比较到尾，满足无重复数字就进行相关的答案记录        for(int i = 0; i < n - 1; i++) &#123;            for(int j = i+1; j < n; j++) &#123;                if((dp[i] & dp[j]) == 0) &#123;//这里取最大值的地方可以注意一下//可以用ans = max(ans, (int)(words[i].size() * words[j].size()));//因为.size()结构是返回无符号类型的int所以力扣上会报错！！！                    if(words[i].size() * words[j].size() > ans)                    ans = words[i].size() * words[j].size();                &#125;            &#125;        &#125;        return ans;    &#125;&#125;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;一、前言&quot;&gt;&lt;a href=&quot;#一、前言&quot; class=&quot;headerlink&quot; title=&quot;一、前言&quot;&gt;&lt;/a&gt;一、前言&lt;/h3&gt;&lt;p&gt;sheepice开启新的篇章了，虽然现在比较忙，但是如果有空，且写到一些比较有启发的力扣题的时候希望能够发一点点题解，毕竟三</summary>
      
    
    
    
    <category term="力扣刷题篇" scheme="https://sample.com/categories/%E5%8A%9B%E6%89%A3%E5%88%B7%E9%A2%98%E7%AF%87/"/>
    
    
    <category term="刷题" scheme="https://sample.com/tags/%E5%88%B7%E9%A2%98/"/>
    
    <category term="力扣" scheme="https://sample.com/tags/%E5%8A%9B%E6%89%A3/"/>
    
  </entry>
  
  <entry>
    <title>周总结（1）</title>
    <link href="https://sample.com/2022/03/27/%E5%91%A8%E6%80%BB%E7%BB%93%EF%BC%881%EF%BC%89/"/>
    <id>https://sample.com/2022/03/27/%E5%91%A8%E6%80%BB%E7%BB%93%EF%BC%881%EF%BC%89/</id>
    <published>2022-03-27T10:44:33.000Z</published>
    <updated>2022-03-28T04:14:18.300Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h3><p>sheepice的CSDN博客地址：<a href="https://blog.csdn.net/qq_60556896/">CSDN地址</a></p><p>欢迎大家来到&#x3D;&#x3D;一周一总结&#x3D;&#x3D;的栏目！！希望能够和大家一起努力！</p><h3 id="二、学习任务"><a href="#二、学习任务" class="headerlink" title="二、学习任务"></a>二、学习任务</h3><h5 id="①力扣的刷题任务"><a href="#①力扣的刷题任务" class="headerlink" title="①力扣的刷题任务"></a>①力扣的刷题任务</h5><p>这周的力扣好像都没有出太难的题目，唯一令我印象比较深刻的是一道困难题<a href="https://leetcode-cn.com/problems/k-th-smallest-in-lexicographical-order/">字典序的第k小的数字</a>，这个题目的模仿了字典树的一个遍历过程，当时真的没有想到，但是其实还是有点眉目的，虽然最后还是没写出来吧。遗憾的是，自己还是没有把字典树给学精通来！</p><p><img src="https://img-blog.csdnimg.cn/b15450e05169480fbb75e160274b782a.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6JKf6JK7c2hlZXA=,size_20,color_FFFFFF,t_70,g_se,x_16"></p><pre class="line-numbers language-c++"><code class="language-c++">//贴一下这个题目的一个求解过程吧class Solution &#123;public:    long min(long a, long b)&#123;        if(a >= b) return b;        return a;    &#125;    //找到此时的数字的所有树节点的个数    int findnums(long cur,int n)&#123;        long next = cur+1;        long sumtox = 0;        while(cur <= n)&#123;            sumtox += min(next-cur,n-cur+1);            next *= 10;            cur *= 10;        &#125;        return (int) sumtox;    &#125;    int findKthNumber(int n, int k) &#123;        long cur = 1;        k--;        while(k > 0)&#123;            int nodes = findnums(cur, n);            //如果结点数小于此时数量，直接在同一层搜索            if(k >= nodes)&#123;                k -= nodes;                cur++;            &#125;            //否则到树的下一层搜索            else&#123;                cur *= 10;                k--;            &#125;        &#125;        return (int)cur;    &#125;&#125;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>&#x3D;&#x3D;当时反正是想不出来的，希望以后看到总结的时候能够写出来这题吧！&#x3D;&#x3D;</p><p><strong>过完本周就是坚持力扣刷题38天了，当然这个连续刷题是有水分的，有的时候遇到完全没有思路的题目就直接跳过去了，蒟蒻太菜，求大佬们带带！</strong></p><hr><h5 id="②leetbook的学习"><a href="#②leetbook的学习" class="headerlink" title="②leetbook的学习"></a>②leetbook的学习</h5><p>本周还跟着三叶姐出的书，学了一点路径dp的知识，虽然在其中有很多以前写过的题目，但是再次刷题的时候还是会遇到各种各样的问题，当然收获最大的是，自己得到了某些方面的拓展，关于这一周的一个拓展，我也写在了我的CSDN博客里面，便于以后的查找：<a href="https://blog.csdn.net/qq_60556896/article/details/123754413?spm=1001.2014.3001.5502">最短路径拓展</a>！！</p><p>下面也是三叶姐的书，感兴趣的同学可以点这：<a href="https://leetcode-cn.com/leetbook/read/path-problems-in-dynamic-programming/r8h07j/">dp路径学习</a></p><p><img src="https://img-blog.csdnimg.cn/56991cd79f994e238c58468699a18170.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6JKf6JK7c2hlZXA=,size_20,color_FFFFFF,t_70,g_se,x_16"></p><hr><h5 id="③课内的学习"><a href="#③课内的学习" class="headerlink" title="③课内的学习"></a>③课内的学习</h5><p>课内其实这周就中规中矩吧，但是因为自己比较的笨，所以会花更多时间去把老师没有布置的题目写完，比如大物第二和第四章的课后习题都刷了一遍，等等。然后就是本来这周想要去开始六级的准备了，但是本人准备了个寂寞，每天都不太想背单词，听听力，我希望赶紧能够养成每天复习点英语的习惯，希望下一次的周记能够写到我英语有一直在复习哈哈哈！！</p><hr><h5 id="④博客的搭建"><a href="#④博客的搭建" class="headerlink" title="④博客的搭建"></a>④博客的搭建</h5><p>虽然自己对网页的方方面面都不知晓，但是为了让自己的博客目前看起来像点样子，还是抽出了周日的一天时间去美化自己的博客吧，就像大家看到的这个亚子，虽然还有些功能没有完善，但是我真的不太会怎么完善了，希望会的uu们可以交一下子我！</p><hr><h3 id="三、运动任务"><a href="#三、运动任务" class="headerlink" title="三、运动任务"></a>三、运动任务</h3><p>这周前几天比较冷还下雨，所以鸽了几天运动，但是后面有每天都去跑步和跳绳哦，我记得这周虽然没有减肥太多，但是体重保持得相当不错。还记得跳绳的时候，跳双摇，旁边的小弟弟召集了他的伙伴到身边围观，哈哈哈哈哈哈哈哈哈哈哈，当时的我真的会有点羞涩的！！</p><h3 id="四、创新任务"><a href="#四、创新任务" class="headerlink" title="四、创新任务"></a>四、创新任务</h3><h5 id="①加入了Carl哥的知识星球："><a href="#①加入了Carl哥的知识星球：" class="headerlink" title="①加入了Carl哥的知识星球："></a>①加入了Carl哥的知识星球：</h5><p>感兴趣的同学可以一起加入哦，曾听一位学姐说，与其花钱在各种不必须的物品之上，不如多知识付费去提高自己的能力！！加入星球后我发现了很多小伙伴有着跟自己相同的困惑，Carl哥非常好的，就是他会给每一个人进行解答，包括传授各种各样的知识和学习路线，值得大家入手！！</p><p><strong>下面是我得到的回答，收获很丰富</strong></p><p><img src="https://img-blog.csdnimg.cn/443ee98d271e4f50ade1640f701b0723.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6JKf6JK7c2hlZXA=,size_20,color_FFFFFF,t_70,g_se,x_16"></p><h5 id="②加了Carl哥还有三叶姐的微信"><a href="#②加了Carl哥还有三叶姐的微信" class="headerlink" title="②加了Carl哥还有三叶姐的微信"></a>②加了Carl哥还有三叶姐的微信</h5><p>&#x3D;&#x3D;虽然可能就是刚开始互相不认识的人，但是总是觉得已经认识了好久哈哈&#x3D;&#x3D;</p><hr><h3 id="五、总结-贴图"><a href="#五、总结-贴图" class="headerlink" title="五、总结+贴图"></a>五、总结+贴图</h3><p>一周下来真的很累很累，但是其实过得真的非常的充实，希望自己接下来可以不嫌麻烦的，继续坚持的做自己喜欢的事情，就像一直保持热爱的她！</p><p><img src="https://img-blog.csdnimg.cn/09100c5cafb848b4b0dc0220a6882b81.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA6JKf6JK7c2hlZXA=,size_20,color_FFFFFF,t_70,g_se,x_16"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;一、前言&quot;&gt;&lt;a href=&quot;#一、前言&quot; class=&quot;headerlink&quot; title=&quot;一、前言&quot;&gt;&lt;/a&gt;一、前言&lt;/h3&gt;&lt;p&gt;sheepice的CSDN博客地址：&lt;a href=&quot;https://blog.csdn.net/qq_60556896/&quot;</summary>
      
    
    
    
    <category term="周总结" scheme="https://sample.com/categories/%E5%91%A8%E6%80%BB%E7%BB%93/"/>
    
    
    <category term="周总结" scheme="https://sample.com/tags/%E5%91%A8%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
</feed>
